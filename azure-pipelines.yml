# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- J2EE

pool:
  vmImage: ubuntu-latest
variables:
 registry: myregistrydemo1.azurecr.io
 dockerfilePath: '**/Dockerfile'
 DOCKER-REPOSITORY-NAME: image1
 port: 8080:8080
 tag: $(Build.Buildnumber)
 AZURE_STORAGE_ACCOUNT: myblobstoragedemoaccount
 JOB_NAME: myblobcontainer
 dockerRegistryServiceConnection: 'arc-registry'

steps:
- task: Maven@3
  inputs:
    mavenPomFile: 'pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
- task: CopyFiles@2
  inputs:
    Contents: 'deployment.yaml'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
# - task: CopyFiles@2
#   inputs:
#       SourceFolder: '/home/vsts/work/1/s/target/'
#       Contents: '*.war'
#       TargetFolder: '$(Build.ArtifactStagingDirectory)'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'Azure for Students(f0d42101-d8e2-4467-abb3-ad2f7301dc3e)'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: 'az storage blob upload-batch --destination ${JOB_NAME} --source ./text --account-name $AZURE_STORAGE_ACCOUNT'
# - task: Docker@2
#   inputs:
#     containerRegistry: 'myregistrydemo1'
#     command: 'login'
- task: Docker@2
  displayName: Build and push an image to container registry
  inputs:
       command: buildAndPush
       repository: $(DOCKER-REPOSITORY-NAME)
       dockerfile: $(dockerfilePath)
       containerRegistry: $(dockerRegistryServiceConnection)
       tags: |
          $(tag)
- task: KubernetesManifest@0
  inputs:
    action: 'deploy'
    kubernetesServiceConnection: 'kubernetes'
    manifests: |
                $(Build.ArtifactStagingDirectory)/drop/deployment.yml
    imagePullSecrets: '$(imagePullSecret)'

# - task: DockerInstaller@0
#   inputs:
#     dockerVersion: '17.09.0-ce'
# - task: AzureCLI@2
#   inputs:
#     azureSubscription: 'Free Trial (7efefb00-e17c-4d85-a4ce-d13264a86786)'
#     scriptType: 'bash'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       docker login $(registry)
#               docker build -f $(dockerfilePath) . -t $(DOCKER-REPOSITORY-NAME)
#               docker run -d -p $(port) $(DOCKER-REPOSITORY-NAME)
#               docker tag $(DOCKER-REPOSITORY-NAME) $(registry).azurecr.io/$(DOCKER-REPOSITORY-NAME):latest
#               docker tag $(DOCKER-REPOSITORY-NAME) $(registry).azurecr.io/$(DOCKER-REPOSITORY-NAME):$(tag)